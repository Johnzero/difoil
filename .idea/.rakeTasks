<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeTask description="List versions of all Rails frameworks and the environment" fullCmd="about" taksId="about" /><RakeGroup description="" fullCmd="" taksId="assets"><RakeTask description="Remove compiled assets" fullCmd="assets:clean" taksId="clean" /><RakeTask description="Compile all the assets named in config.assets.precompile" fullCmd="assets:precompile" taksId="precompile" /><RakeGroup description="" fullCmd="" taksId="clean"><RakeTask description="" fullCmd="assets:clean:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="assets:environment" taksId="environment" /><RakeGroup description="" fullCmd="" taksId="precompile"><RakeTask description="" fullCmd="assets:precompile:all" taksId="all" /><RakeTask description="" fullCmd="assets:precompile:nondigest" taksId="nondigest" /><RakeTask description="" fullCmd="assets:precompile:primary" taksId="primary" /></RakeGroup></RakeGroup><RakeTask description="Run the Continous Integration tests for Redmine" fullCmd="ci" taksId="ci" /><RakeGroup description="" fullCmd="" taksId="ci"><RakeTask description="Build Redmine" fullCmd="ci:build" taksId="build" /><RakeTask description="Setup Redmine for a new build" fullCmd="ci:setup" taksId="setup" /><RakeTask description="Finish the build" fullCmd="ci:teardown" taksId="teardown" /></RakeGroup><RakeTask description="Creates database.yml for the CI server" fullCmd="config/database.yml" taksId="config/database.yml" /><RakeTask description="Generates a secret token for the application" fullCmd="config/initializers/secret_token.rb" taksId="config/initializers/secret_token.rb" /><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Create the database from DATABASE_URL or config/database.yml for the current Rails.env (use db:create:all to create all dbs in the config)" fullCmd="db:create" taksId="create" /><RakeTask description="Decrypts SCM and LDAP passwords in the database" fullCmd="db:decrypt" taksId="decrypt" /><RakeTask description="Drops the database using DATABASE_URL or the current Rails.env (use db:drop:all to drop all databases)" fullCmd="db:drop" taksId="drop" /><RakeTask description="Encrypts SCM and LDAP passwords in the database" fullCmd="db:encrypt" taksId="encrypt" /><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeTask description="" fullCmd="db:fixtures:identify" taksId="identify" /></RakeGroup><RakeTask description="Migrate the database (options: VERSION=x, VERBOSE=false)" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Display status of migrations" fullCmd="db:migrate:status" taksId="status" /><RakeTask description="" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="" fullCmd="db:migrate:plugin" taksId="plugin" /><RakeTask description="" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="" fullCmd="db:migrate:up" taksId="up" /></RakeGroup><RakeTask description="Rolls the schema back to the previous version (specify steps w/ STEP=n)" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeTask description="Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /><RakeTask description="" fullCmd="db:schema:load_if_ruby" taksId="load_if_ruby" /></RakeGroup><RakeTask description="Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeTask description="Create the database, load the schema, and initialize with the seed data (use db:reset to also drop the db first)" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dump the database structure to db/structure.sql" fullCmd="db:structure:dump" taksId="dump" /><RakeTask description="" fullCmd="db:structure:load" taksId="load" /><RakeTask description="" fullCmd="db:structure:load_if_sql" taksId="load_if_sql" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:_dump" taksId="_dump" /><RakeTask description="" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="" fullCmd="db:charset" taksId="charset" /><RakeTask description="" fullCmd="db:collation" taksId="collation" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeTask description="" fullCmd="db:forward" taksId="forward" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /><RakeTask description="" fullCmd="db:migrate_plugins" taksId="migrate_plugins" /><RakeTask description="" fullCmd="db:reset" taksId="reset" /><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="" fullCmd="db:sessions:create" taksId="create" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="" fullCmd="db:test:load" taksId="load" /><RakeTask description="" fullCmd="db:test:load_schema" taksId="load_schema" /><RakeTask description="" fullCmd="db:test:load_structure" taksId="load_structure" /><RakeTask description="" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="db:test:purge" taksId="purge" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Generate docs for the app -- also available doc:rails, doc:guides, doc:plugins (options: TEMPLATE=/rdoc-template.rb, TITLE=&quot;Custom Title&quot;)" fullCmd="doc:app" taksId="app" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /><RakeTask description="" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="" fullCmd="doc:clobber_plugins" taksId="clobber_plugins" /><RakeTask description="" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="" fullCmd="doc:guides" taksId="guides" /><RakeTask description="" fullCmd="doc:plugins" taksId="plugins" /><RakeTask description="" fullCmd="doc:rails" taksId="rails" /><RakeTask description="" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="" fullCmd="doc:rerails" taksId="rerails" /></RakeGroup><RakeTask description="Create YAML test fixtures from data in an existing database" fullCmd="extract_fixtures" taksId="extract_fixtures" /><RakeTask description="Generates a secret token for the application" fullCmd="generate_secret_token" taksId="generate_secret_token" /><RakeTask description="Updates and checks locales against en.yml" fullCmd="locales" taksId="locales" /><RakeGroup description="" fullCmd="" taksId="locales"><RakeTask description="Adds a new top-level translation string to all locale file (only works for childless keys, probably doesn't work on windows, doesn't check for duplicates)" fullCmd="locales:add_key" taksId="add_key" /><RakeTask description="Checks interpolation arguments in locals against en.yml" fullCmd="locales:check_interpolation" taksId="check_interpolation" /><RakeTask description="Check parsing yaml by psych library on Ruby 1.9" fullCmd="locales:check_parsing_by_psych" taksId="check_parsing_by_psych" /><RakeTask description="Duplicates a key" fullCmd="locales:dup" taksId="dup" /><RakeTask description="Removes a translation string from all locale file (only works for top-level childless non-multiline keys, probably doesn't work on windows)" fullCmd="locales:remove_key" taksId="remove_key" /><RakeTask description="Updates language files based on en.yml content (only works for new top level keys)" fullCmd="locales:update" taksId="update" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations (use notes:optimize, :fixme, :todo for focus)" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=CUSTOM" fullCmd="notes:custom" taksId="custom" /><RakeTask description="" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="rails"><RakeTask description="Applies the template supplied by LOCATION=(/path/to/template) or URL" fullCmd="rails:template" taksId="template" /><RakeTask description="Update configs and some other initially generated files (or use just update:configs, update:scripts, or update:application_controller)" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="templates"><RakeTask description="" fullCmd="rails:templates:copy" taksId="copy" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="" fullCmd="rails:update:application_controller" taksId="application_controller" /><RakeTask description="" fullCmd="rails:update:configs" taksId="configs" /><RakeTask description="" fullCmd="rails:update:scripts" taksId="scripts" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="redmine"><RakeGroup description="" fullCmd="" taksId="attachments"><RakeTask description="Moves attachments stored at the root of the file directory (ie" fullCmd="redmine:attachments:move_to_subdirectories" taksId="move_to_subdirectories" /><RakeTask description="Removes uploaded files left unattached after one day" fullCmd="redmine:attachments:prune" taksId="prune" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="email"><RakeTask description="Read an email from standard input" fullCmd="redmine:email:read" taksId="read" /><RakeTask description="Read emails from an IMAP server" fullCmd="redmine:email:receive_imap" taksId="receive_imap" /><RakeTask description="Read emails from an POP3 server" fullCmd="redmine:email:receive_pop3" taksId="receive_pop3" /><RakeTask description="Send a test email to the user with the provided login name" fullCmd="redmine:email:test[login]" taksId="test[login]" /><RakeTask description="" fullCmd="redmine:email:test" taksId="test" /></RakeGroup><RakeTask description="Fetch changesets from the repositories" fullCmd="redmine:fetch_changesets" taksId="fetch_changesets" /><RakeTask description="Load Redmine default configuration data" fullCmd="redmine:load_default_data" taksId="load_default_data" /><RakeTask description="FOR EXPERIMENTAL USE ONLY, Moves Redmine data from production database to the development database" fullCmd="redmine:migrate_dbms" taksId="migrate_dbms" /><RakeTask description="Mantis migration script" fullCmd="redmine:migrate_from_mantis" taksId="migrate_from_mantis" /><RakeTask description="Trac migration script" fullCmd="redmine:migrate_from_trac" taksId="migrate_from_trac" /><RakeTask description="List all permissions and the actions registered with them" fullCmd="redmine:permissions" taksId="permissions" /><RakeTask description="Migrates and copies plugins assets" fullCmd="redmine:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Copies plugins assets into the public directory" fullCmd="redmine:plugins:assets" taksId="assets" /><RakeTask description="Migrates installed plugins" fullCmd="redmine:plugins:migrate" taksId="migrate" /><RakeTask description="Runs the plugins tests" fullCmd="redmine:plugins:test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for {:functionals=&gt;&quot;db:test:prepare&quot;}" fullCmd="redmine:plugins:test:functionals" taksId="functionals" /><RakeTask description="Run tests for {:integration=&gt;&quot;db:test:prepare&quot;}" fullCmd="redmine:plugins:test:integration" taksId="integration" /><RakeTask description="Run tests for {:units=&gt;&quot;db:test:prepare&quot;}" fullCmd="redmine:plugins:test:units" taksId="units" /></RakeGroup></RakeGroup><RakeTask description="Send reminders about issues due in the next days" fullCmd="redmine:send_reminders" taksId="send_reminders" /><RakeGroup description="" fullCmd="" taksId="tokens"><RakeTask description="Removes expired tokens" fullCmd="redmine:tokens:prune" taksId="prune" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="watchers"><RakeTask description="Removes watchers from what they can no longer view" fullCmd="redmine:watchers:prune" taksId="prune" /></RakeGroup></RakeGroup><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a cryptographically secure secret key (this is typically used to generate a secret for cookie sessions)" fullCmd="secret" taksId="secret" /><RakeTask description="Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeTask description="Runs test:units, test:functionals, test:integration together (also available: test:benchmark, test:profile, test:plugins)" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Measures test coverage" fullCmd="test:coverage" taksId="coverage" /><RakeTask description="Run tests for rdm_routing / Run the routing tests" fullCmd="test:rdm_routing" taksId="rdm_routing" /><RakeTask description="Run tests for {:recent=&gt;&quot;test:prepare&quot;} / Test recent changes" fullCmd="test:recent" taksId="recent" /><RakeTask description="Run unit and functional scm tests" fullCmd="test:scm" taksId="scm" /><RakeGroup description="" fullCmd="" taksId="scm"><RakeTask description="Run tests for {:functionals=&gt;&quot;db:test:prepare&quot;} / Run the scm functional tests" fullCmd="test:scm:functionals" taksId="functionals" /><RakeGroup description="" fullCmd="" taksId="setup"><RakeTask description="Creates all test repositories" fullCmd="test:scm:setup:all" taksId="all" /><RakeTask description="Creates a test bazaar repository" fullCmd="test:scm:setup:bazaar" taksId="bazaar" /><RakeTask description="Creates directory for test repositories" fullCmd="test:scm:setup:create_dir" taksId="create_dir" /><RakeTask description="Creates a test cvs repository" fullCmd="test:scm:setup:cvs" taksId="cvs" /><RakeTask description="Creates a test darcs repository" fullCmd="test:scm:setup:darcs" taksId="darcs" /><RakeTask description="Creates a test filesystem repository" fullCmd="test:scm:setup:filesystem" taksId="filesystem" /><RakeTask description="Creates a test git repository" fullCmd="test:scm:setup:git" taksId="git" /><RakeTask description="Creates a test mercurial repository" fullCmd="test:scm:setup:mercurial" taksId="mercurial" /><RakeTask description="Creates a test subversion repository" fullCmd="test:scm:setup:subversion" taksId="subversion" /></RakeGroup><RakeTask description="Run tests for {:units=&gt;&quot;db:test:prepare&quot;} / Run the scm unit tests" fullCmd="test:scm:units" taksId="units" /><RakeTask description="Updates installed test repositories" fullCmd="test:scm:update" taksId="update" /></RakeGroup><RakeTask description="Run tests for {:single=&gt;&quot;test:prepare&quot;}" fullCmd="test:single" taksId="single" /><RakeTask description="Run tests for {:ui=&gt;&quot;db:test:prepare&quot;} / Run the UI tests with Capybara (PhantomJS listening on port 4444 is required)" fullCmd="test:ui" taksId="ui" /><RakeTask description="Run tests for {:uncommitted=&gt;&quot;test:prepare&quot;} / Test changes since last checkin (only Subversion and Git)" fullCmd="test:uncommitted" taksId="uncommitted" /><RakeTask description="" fullCmd="test:benchmark" taksId="benchmark" /><RakeTask description="" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="" fullCmd="test:integration" taksId="integration" /><RakeTask description="" fullCmd="test:plugins" taksId="plugins" /><RakeTask description="" fullCmd="test:prepare" taksId="prepare" /><RakeTask description="" fullCmd="test:profile" taksId="profile" /><RakeTask description="" fullCmd="test:run" taksId="run" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="" fullCmd="test:test:benchmark_mode" taksId="benchmark_mode" /></RakeGroup><RakeTask description="" fullCmd="test:units" taksId="units" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays all time zones, also available: time:zones:us, time:zones:local -- filter with OFFSET parameter, e.g., OFFSET=-6" fullCmd="time:zones:all" taksId="all" /><RakeTask description="" fullCmd="time:zones:local" taksId="local" /><RakeTask description="" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeTask description="Clear session, cache, and socket files from tmp/ (narrow w/ tmp:sessions:clear, tmp:cache:clear, tmp:sockets:clear)" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask description="Generate YARD Documentation" fullCmd="yard" taksId="yard" /><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="doc" taksId="doc" /><RakeTask description="" fullCmd="doc/api" taksId="doc/api" /><RakeTask description="" fullCmd="doc/api/index.html" taksId="doc/api/index.html" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="generate_session_store" taksId="generate_session_store" /><RakeTask description="" fullCmd="load_default_data" taksId="load_default_data" /><RakeTask description="" fullCmd="migrate_from_mantis" taksId="migrate_from_mantis" /><RakeTask description="" fullCmd="migrate_from_trac" taksId="migrate_from_trac" /><RakeTask description="" fullCmd="rails_env" taksId="rails_env" /><RakeGroup description="" fullCmd="" taksId="railties"><RakeGroup description="" fullCmd="" taksId="install"><RakeTask description="" fullCmd="railties:install:migrations" taksId="migrations" /></RakeGroup></RakeGroup></RakeGroup></Settings>
